package ru.avalon.java.dev.j10.labs.shapes;

/**
 * Представление о треугольнике.
 * <p>
 * Треуго́льник (в евклидовом пространстве) — геометрическая
 * фигура, образованная тремя отрезками, которые соединяют
 * три точки, не лежащие на одной прямой. Указанные три
 * точки называются вершинами треугольника, а отрезки —
 * сторонами треугольника. Часть плоскости, ограниченная
 * сторонами, называется внутренностью треугольника: нередко
 * треугольник рассматривается вместе со своей внутренностью
 * (например, для определения понятия площади).
 *
 * @see <a href="https://ru.wikipedia.org/wiki/%D0%A2%D1%80%D0%B5%D1%83%D0%B3%D0%BE%D0%BB%D1%8C%D0%BD%D0%B8%D0%BA">Треугольник</a>
 */
public final class Triangle implements Polygon {

    private float a; // первая сторона треугольниука
    private float b; // вторая сторона треугольниука
    private float c; // третья сторона треугольниука
    private float x; // абсцисса точки
    private float y; // ордината точки
    private int angle;  // угол ротации треугольника
    
    /*  TODO (Замечания №1)
        - Все переменные делать финализированными бесмысленно, данные параметры возможно
        понадобиться изменить при работе с ними. Например: координаты треугольника или угол
        повотора, могут меняться, если мы будем перемещать фигуру по плоскости или поворачивать.
        - Стороны и высота треугольнка тоже могут меняться.
        - Объявляя класс как final ты не сможешь от него наследоваться! В данной ЛР final можно применить,
        т.к. класс неимеет наследников. СДЕЛАНО
        - Для работы с треугольником достаточно знать все его 3 стороны, высота в данном случае будет
        параметр зависящий от значений этих сторон. СДЕЛАНО
    */

    public Triangle() {
        a = (float) (100 * Math.random());
        b = (float) (100 * Math.random());
        c = (float) (100 * Math.random());
        x = (float) (100 * Math.random());
        y = (float) (100 * Math.random());
        angle = (int) (360 * Math.random());
        
        /*  TODO (Замечания №2 ЛР№2)
            - Если ты рандомно создаешь три стороны
            треугольника, ты должна соблюдать главное его правило - "Сумма любых двух
            сторон, должна быть больше чем третья"
            - Например, у тебя может создаться треугольник со сторонами 3, 10 и 40.
            Такой треугольник невозможно построить и не выполняется правило
            3 + 10 > 40 - ложь, поэтому возникает NaN
            - Исправить метод создания треугольника!!!
        */

    }
    
    /*  TODO (Замечания №1 ЛР№2)
        - Дописать комментарии полей и методов класса
        - Добавлять 1 к переменным в данном случае бесмысленно, т.к. они
        используются в единичном экземпляре. Переименовать переменные! УБРАЛА
        - В конструкторе Triangle(), получаеться треугольник, который на полскости построить нельзя.
        Если по твоим трем сторонам построить треугольник, то высота уже в 99,9% не войдет в данный треугольник.
        - Убрать высоту, Площадь треугольника вычислить по формуле Герона.ПЕРЕДЕЛАЛА
    */

    // метод возвращает периметр треугольника
    @Override
    public float getPerimeter() {
        return a + b + c;
    }

    // метод возвращает абсциссу х треугольника
    @Override
    public float getX() {
        return x;
    }

    // метод возвращает ординату y треугольника
    @Override
    public float getY() {
        return y;
    }

    // метод возвращает площадь треугольника
    @Override
    public float getArea() {

        float pp = (float) ((a + b + c) / 2.0);  // полупериметр треугольника
        return (float) (Math.sqrt(pp * (pp - a) * (pp - b) * (pp - c)));
    }

    // метод возвращает угол поворота треугольника
    @Override
    public int getRotation() {
        return angle;
    }

    /*
     * TODO: Реализовать класс 'Triangle'
     * 1. Используйте наследование.
     * 2. Реализуйте все абстрактные методы.
     */

    @Override
    public String toString() {
        return "Triangle (" +
                "a = " + a +
                ",  b= " + b +
                ", c = " + c +
                ')';
    }

   /*  TODO (Замечания №1)
        - Метод toString изучается на 2 курсе Java, наверное подсмотрела в интернете, если 
        смысл метода тебе понятен, то пусть остается! )))
    */
}
